// /streams/{videoId}
export type streams_videoId =
    | streams_videoId_base
    | {
          message: string;
          error: string;
      };

export type streams_videoId_base = {
    title: string;
    description: string;
    uploadDate: string;
    uploader: string;
    uploaderUrl: string;
    uploaderAvatar: string;
    thumbnailUrl: string;
    hls: string;
    dash: string;
    lbryId: unknown;
    category: string;
    license: string;
    visibility: string;
    tags: Array<string>;
    metaInfo: Array<unknown>;
    uploaderVerified: boolean;
    duration: number;
    views: number;
    likes: number;
    dislikes: number;
    uploaderSubscriberCount: number;
    audioStreams: Array<{
        url: string;
        format: string;
        quality: string;
        mimeType: string;
        codec: string;
        audioTrackId: unknown;
        audioTrackName: unknown;
        audioTrackType: unknown;
        audioTrackLocale: unknown;
        videoOnly: boolean;
        itag: number;
        bitrate: number;
        initStart: number;
        initEnd: number;
        indexStart: number;
        indexEnd: number;
        width: number;
        height: number;
        fps: number;
        contentLength: number;
    }>;
    videoStreams: Array<{
        url: string;
        format: string;
        quality: string;
        mimeType: string;
        codec?: string;
        audioTrackId: unknown;
        audioTrackName: unknown;
        audioTrackType: unknown;
        audioTrackLocale: unknown;
        videoOnly: boolean;
        itag: number;
        bitrate: number;
        initStart: number;
        initEnd: number;
        indexStart: number;
        indexEnd: number;
        width: number;
        height: number;
        fps: number;
        contentLength: number;
    }>;
    relatedStreams: Array<{
        url: string;
        type: string;
        title: string;
        thumbnail: string;
        uploaderName: string;
        uploaderUrl: string;
        uploaderAvatar: string;
        uploadedDate: string;
        shortDescription: unknown;
        duration: number;
        views: number;
        uploaded: number;
        uploaderVerified: boolean;
        isShort: boolean;
    }>;
    subtitles: Array<{
        url: string;
        mimeType: string;
        name: string;
        code: string;
        autoGenerated: boolean;
    }>;
    livestream: boolean;
    proxyUrl: string;
    chapters: Array<{
        title: string;
        image: string;
        start: number;
    }>;
    previewFrames: Array<{
        urls: Array<string>;
        frameWidth: number;
        frameHeight: number;
        totalCount: number;
        durationPerFrame: number;
        framesPerPageX: number;
        framesPerPageY: number;
    }>;
};

export type sponsors_videoId = {
    hash: string;
    segments: Array<{
        UUID: string;
        actionType: string;
        category:
            | "sponsor"
            | "intro"
            | "outro"
            | "preview"
            | "interaction"
            | "selfpromo"
            | "music_offtopic"
            | "filler";
        segment: Array<number>;
        videoDuration: number;
    }>;
    videoID: string;
};

// /comments/{videoId}
export type comments_videoId = {
    comments: Array<{
        author: string;
        thumbnail: string;
        commentId: string;
        commentText: string;
        commentedTime: string;
        commentorUrl: string;
        repliesPage?: string;
        likeCount: number;
        replyCount: number;
        hearted: boolean;
        pinned: boolean;
        verified: boolean;
        creatorReplied: boolean;
        channelOwner: boolean;
    }>;
    nextpage: string;
    disabled: boolean;
    commentCount: number;
};

// /trending
export type trending = Array<{
    url: string;
    type: string;
    title: string;
    thumbnail: string;
    uploaderName: string;
    uploaderUrl: string;
    uploaderAvatar: string;
    uploadedDate: string;
    shortDescription: string;
    duration: number;
    views: number;
    uploaded: number;
    uploaderVerified: boolean;
    isShort: boolean;
}>;

// /channel/{channelId}
export type channel_channelId = {
    id: string;
    name: string;
    avatarUrl: string;
    bannerUrl: string;
    description: string;
    nextpage: string;
    subscriberCount: number;
    verified: boolean;
    relatedStreams: Array<{
        url: string;
        type: string;
        title: string;
        thumbnail: string;
        uploaderName: string;
        uploaderUrl: string;
        uploaderAvatar: null;
        uploadedDate: string;
        shortDescription: string;
        duration: number;
        views: number;
        uploaded: number;
        uploaderVerified: boolean;
        isShort: boolean;
    }>;
    tabs: Array<{
        name: string;
        data: string;
    }>;
};

export type channels_tabs = {
    nextpage: string;
    content: Array<
        | {
              url: string;
              type: "stream";
              title: string;
              thumbnail: string;
              uploaderName: string;
              uploaderUrl: string;
              uploaderAvatar: null;
              uploadedDate: null;
              shortDescription: null;
              duration: number;
              views: number;
              uploaded: number;
              uploaderVerified: boolean;
              isShort: true;
          }
        | {
              url: string;
              type: "stream";
              title: string;
              thumbnail: string;
              uploaderName: string;
              uploaderUrl: string;
              uploaderAvatar: null;
              uploadedDate: string;
              shortDescription: string;
              duration: number;
              views: number;
              uploaded: number;
              uploaderVerified: boolean;
              isShort: false;
          }
        | {
              url: string;
              type: "playlist";
              name: string;
              thumbnail: string;
              uploaderName: string;
              uploaderUrl: string;
              uploaderVerified: boolean;
              playlistType: string;
              videos: number;
          }
    >;
};

export type channels_tabs_items_shorts = {
    url: string;
    type: "stream";
    title: string;
    thumbnail: string;
    uploaderName: string;
    uploaderUrl: string;
    uploaderAvatar: null;
    uploadedDate: null;
    shortDescription: null;
    duration: number;
    views: number;
    uploaded: number;
    uploaderVerified: boolean;
    isShort: true;
}[];

export type channels_tabs_items_livestreams = {
    url: string;
    type: "stream";
    title: string;
    thumbnail: string;
    uploaderName: string;
    uploaderUrl: string;
    uploaderAvatar: null;
    uploadedDate: string;
    shortDescription: string;
    duration: number;
    views: number;
    uploaded: number;
    uploaderVerified: boolean;
    isShort: false;
}[];

export type channels_tabs_items_playlists = {
    url: string;
    type: "playlist";
    name: string;
    thumbnail: string;
    uploaderName: string;
    uploaderUrl: string;
    uploaderVerified: boolean;
    playlistType: string;
    videos: number;
}[];

// /feed
export type feed = Array<{
    url: string;
    type: string;
    title: string;
    thumbnail: string;
    uploaderName: string;
    uploaderUrl: string;
    uploaderAvatar: string;
    uploadedDate: string;
    shortDescription: string;
    duration: number;
    views: number;
    uploaded: number;
    uploaderVerified: boolean;
    isShort: boolean;
}>;

// /search
export type search = {
    items: (
        | {
              url: string;
              type: "stream";
              title: string;
              thumbnail: string;
              uploaderName: string;
              uploaderUrl: string;
              uploaderAvatar: string;
              uploadedDate?: string;
              shortDescription?: string;
              duration: number;
              views: number;
              uploaded: number;
              uploaderVerified: boolean;
              isShort: boolean;
          }
        | {
              url: string;
              type: "channel";
              name: string;
              thumbnail: string;
              description?: string;
              subscribers: number;
              videos: number;
              verified: boolean;
          }
        | {
              url: string;
              type: "playlist";
              name: string;
              thumbnail: string;
              uploaderName: string;
              uploaderUrl: string;
              uploaderVerified: boolean;
              playlistType: string;
              videos: number;
          }
    )[];
    nextpage: string;
    suggestion: string;
    corrected: boolean;
};

// /user
export type user_playlists = Array<{
    id: string;
    name: string;
    shortDescription: string;
    thumbnail: string;
    videos: number;
}>;

// /subscriptions
export type subscriptions = Array<{
    url: string;
    name: string;
    avatar: string;
    verified: boolean;
}>;
